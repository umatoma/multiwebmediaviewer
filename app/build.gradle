apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "io.github.umatoma.multiwebmediaviewer"
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }
    signingConfigs {
        release {
            storeFile file(System.getenv('RELEASE_STORE_FILE') ?: '~/.android/release.keystore')
            storePassword System.getenv('RELEASE_STORE_PASSWORD')
            keyAlias System.getenv('RELEASE_KEY_ALIAS')
            keyPassword System.getenv('RELEASE_KEY_PASSWORD')
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.debug'
            debuggable true
        }
    }
    flavorDimensions 'version'
    productFlavors {
        prod {
            buildConfigField 'String', 'HATENA_API_AUTH_BASE_URL', '"https://www.hatena.com"'
            buildConfigField 'String', 'HATENA_API_ENTRY_BASE_URL', '"https://b.hatena.ne.jp"'
            buildConfigField 'String', 'FEEDLY_API_BASE_URL', '"https://cloud.feedly.com"'
            buildConfigField 'String', 'FEEDLY_API_REDIRECT_URL', '"http://localhost:8080"'
        }
        stub {
            buildConfigField 'String', 'HATENA_API_AUTH_BASE_URL', '"http://localhost:9001"'
            buildConfigField 'String', 'HATENA_API_ENTRY_BASE_URL', '"http://localhost:9001"'
            buildConfigField 'String', 'FEEDLY_API_BASE_URL', '"http://localhost:9002"'
            buildConfigField 'String', 'FEEDLY_API_REDIRECT_URL', '"http://localhost:8080"'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }
    testOptions {
        reportDir "$rootDir/test-reports"
        resultsDir "$rootDir/test-results"
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
        unitTests {
            returnDefaultValues true
            all {
                testLogging {
                    showStandardStreams true
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

configurations {
    [testImplementation, androidTestImplementation]*.extendsFrom allTestImplementation
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'

    // Android X
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.browser:browser:1.0.0'

    // Material Design
    implementation 'com.google.android.material:material:1.2.0-alpha03'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.2.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.2.1'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'

    // NanoHTTPD
    implementation 'org.nanohttpd:nanohttpd:2.2.0'

    // Groupie
    implementation 'com.xwray:groupie:2.7.0'
    implementation 'com.xwray:groupie-databinding:2.7.0'

    // JUnit
    // testImplementation 'junit:junit:4.12'
    // testImplementation 'androidx.test.ext:junit:1.1.1'

    // JUnit5
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    androidTestImplementation 'org.junit.platform:junit-platform-runner:1.5.2'
    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.2.0'
    androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.2.0'

    // Spek2
    allTestImplementation 'org.spekframework.spek2:spek-dsl-jvm:2.0.8'
    allTestImplementation 'org.spekframework.spek2:spek-runner-junit5:2.0.8'
    allTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Truth
    allTestImplementation 'com.google.truth:truth:1.0'

    // MockK
    testImplementation 'io.mockk:mockk:1.9.3'

    // Espresso
    // testImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}
