name: Android CI

on:
  push:
    branches: 
      - master

jobs:
  test:
    runs-on: [macos-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Gradle
      run: ./gradlew test

  assembleDebug:
    runs-on: [macos-latest]
    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install google-services.json
      run: echo $GOOGLE_SERVICES_JSON > ./app/google-services.json
    - name: Assemble debug with Gradle
      run: ./gradlew assembleDebug
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: app-debug.apk
        path: ./app/build/outputs/apk/debug/app-debug.apk

  uiTestDebug:
    needs: [test, assembleDebug]
    runs-on: [macos-latest]
    env:
      PACKAGE_NAME: 'system-images;android-28;google_apis_playstore;x86_64'
      AVD_NAME: 'Avd_Android_28_Google_Apis_Playstore_x86_64'
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install Android Emulator
      run: |
        echo y | $ANDROID_HOME/tools/bin/sdkmanager --install $PACKAGE_NAME
        echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --name $AVD_NAME --package $PACKAGE_NAME
    - name: Download artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: app-debug.apk
        path: ./app/build/outputs/apk/debug
    - name: Install node modules
      run: npm install
      working-directory: ./appium
    - name: Run Android Emulator
      run: |
        $ANDROID_HOME/emulator/emulator -list-avds
        $ANDROID_HOME/emulator/emulator -avd $AVD_NAME -no-window -no-boot-anim -no-audio -netdelay none -netspeed full > /dev/null 2>&1 &
        $ANDROID_HOME/platform-tools/adb wait-for-local-device
        $ANDROID_HOME/platform-tools/adb devices
        $ANDROID_HOME/platform-tools/adb shell service list
    - name: Run appium server
      run: |
        npx appium-doctor
        npm run start -- --log-timestamp --log-no-colors > appium.log &
      working-directory: ./appium
    - name: Run appium tests
      run: npm run test
      working-directory: ./appium
    - name: Upload appium log
      if: always()
      uses: actions/upload-artifact@v1.0.0
      with:
        name: appium.log
        path: ./appium/appium.log

  distributeDebug:
    needs: [assembleDebug, uiTestDebug]
    runs-on: [macos-latest]
    env:
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_TEST_GROUPS: ${{ secrets.FIREBASE_TEST_GROUPS }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
    - uses: actions/checkout@v1
    - name: Download artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: app-debug.apk
        path: build
    - name: Install firebase cli
      run: curl -sL firebase.tools | bash
    - name: Distribute application
      run: >
        firebase appdistribution:distribute ./build/app-debug.apk
        --app $FIREBASE_APP_ID
        --release-notes "${{ github.sha }}"
        --groups $FIREBASE_TEST_GROUPS
